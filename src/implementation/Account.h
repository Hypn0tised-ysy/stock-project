#pragma once
#include <iostream>
#include <vector>
#include <string>
#include <conio.h>
#include <stdlib.h>
#include <Windows.h>
#include "My_stock.h"
#include "order.h"
#include <Qstring>
#include<time.h>
#include<ctime>
#include<cstdlib>
// ???????????????????¨´????????????????????Account_group???›¥?????????????????????,??????????Account_group

class Account
{
private:
    int id;							 // ??????????????
    std::string Username;			 // ?????id
    std::string password;			 // ?????????
    double money;					 // ??????????
    std::vector<My_stock> mystock; // ?›¥????????????›¥????????????????
    // std::vector<Account*>acc;//?›¥??????ÈÉ????????????????????????????¡Â??????????????Account????????????????????acc???›¥??????
    friend class Account_group;

public:
    // int enroll(std::string _id,std::string _password);//???
    // void setid(Account *user,bool &reg,std::string s);//???????
    // void setpassword(Account *user,std::string s);//????????
    Account() {}
    // bool check(std::string id, std::string pass);//?????????????
    bool is_oktobuy(double price); // ??????????????????????
    // Account*Getaccount(bool is_ok);//??????§Ø????????????????????????????????????
    std::string get_name(Account *user);									  // ????????id
    std::vector<My_stock> show_my_stock();							  // ??????????????
    void upgrade(std::string _sym, int _sum, double price, Order &order); // ??????????//
    // Account* find_user(std::string _id);//????????id?????
    void setmoney(double mm);
    Account(int _id); // ??????
    std::string return_username();//
    int return_id();//
    double return_money();//
    int add_my_order(int &operatorId, double price, int quantity, const QString &symbol, bool side);//base the order Return orderId
    int removeOrder(int Orderid);
    std::vector<Order> show_my_order();//zsz????
};

// ?????????????????????????????????
// ????????????????????????????id????????????????????????????????????????????????????????????????????????????????????

int enroll(std::string _id, std::string _password); // ???
int login(std::string _id, std::string _password);	// ???
int ticks_time(int duration, int id);//??????????????????¦Ë???????????(??¡Â???????????????????????(??¦Ë????)?????????????????????????????????)
